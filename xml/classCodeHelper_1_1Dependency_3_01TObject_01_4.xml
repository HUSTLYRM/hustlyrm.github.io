<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCodeHelper_1_1Dependency_3_01TObject_01_4" kind="class" language="C++" prot="public">
    <compoundname>CodeHelper::Dependency&lt; TObject &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>IsFormattable</type>
        <declname>TObject</declname>
        <defname>TObject</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a15c20a21988b030b7e2da4ccd6c0b243" prot="public" static="no">
        <type>TObject</type>
        <definition>using CodeHelper::Dependency&lt; TObject &gt;::ObjectType =  TObject</definition>
        <argsstring></argsstring>
        <name>ObjectType</name>
        <briefdescription>
<para>用于可能的类型萃取 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="183" column="1" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a854d83b6b57d03a3dd976dafb3fefa23" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; TObject &gt;</type>
        <definition>std::shared_ptr&lt;TObject&gt; CodeHelper::Dependency&lt; TObject &gt;::ObjectPointer</definition>
        <argsstring></argsstring>
        <name>ObjectPointer</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="186" column="17" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a3ac53cfc165d11f43d390ad2ff06a89c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classCodeHelper_1_1Dependency" kindref="compound">Dependency</ref> &amp;</type>
        <definition>Dependency&amp; CodeHelper::Dependency&lt; TObject &gt;::operator=</definition>
        <argsstring>(const std::shared_ptr&lt; TObject &gt; &amp;objectPointer) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const std::shared_ptr&lt; TObject &gt; &amp;</type>
          <declname>objectPointer</declname>
        </param>
        <briefdescription>
<para>可以利用此赋值表达式简化依赖配置 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="190" column="12" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a19aa4b65634aa6930c39e3615d6986a7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CodeHelper::Dependency&lt; TObject &gt;::Empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Empty</name>
        <briefdescription>
<para>表明依赖是否为空（内部是否为空指针） </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="196" column="7" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a043dad6e13c0d2b767c8fb3ab6e62d0c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CodeHelper::Dependency&lt; TObject &gt;::Check</definition>
        <argsstring>(const std::string_view requester, const std::string_view usage) const noexcept</argsstring>
        <name>Check</name>
        <param>
          <type>const std::string_view</type>
          <declname>requester</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>usage</declname>
        </param>
        <briefdescription>
<para>提供简单的函数判断依赖项是否为空 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="199" column="7" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="199" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a0acf364a08e18f8e011d11fcabfcdfc4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>TObject &amp;</type>
        <definition>TObject&amp; CodeHelper::Dependency&lt; TObject &gt;::GetObject</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetObject</name>
        <briefdescription>
<para>直接获取成员，简化一些表达式 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>可能导致段错误，在使用前请确保依赖不为空 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="210" column="10" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1acfa9dcf9fa747695cde276b9dd40ad90" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>TObject &amp;</type>
        <definition>TObject&amp; CodeHelper::Dependency&lt; TObject &gt;::LogGetObject</definition>
        <argsstring>(const std::string_view requester, const std::string_view objectName) const noexcept</argsstring>
        <name>LogGetObject</name>
        <param>
          <type>const std::string_view</type>
          <declname>requester</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>objectName</declname>
        </param>
        <briefdescription>
<para>在获取成员前打印一行 debug 日志，用于段错误时快速 trace </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="213" column="10" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a8aa0dd431bb9babe2c7b2b9e16fcbd1c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; CodeHelper::Dependency&lt; TObject &gt;::Format</definition>
        <argsstring>(std::ostream &amp;stream) const noexcept</argsstring>
        <name>Format</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="220" column="14" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" line="180" column="18" bodyfile="/home/sango/.vs/LangYa/32fc2ebc-99b1-4edc-8556-3cdf8201edfe/src/Sources/CodeHelper/Headers/LangYa/CodeHelper/Constrained.hpp" bodystart="180" bodyend="223"/>
    <listofallmembers>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a043dad6e13c0d2b767c8fb3ab6e62d0c" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>Check</name></member>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a19aa4b65634aa6930c39e3615d6986a7" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>Empty</name></member>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a8aa0dd431bb9babe2c7b2b9e16fcbd1c" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>Format</name></member>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a0acf364a08e18f8e011d11fcabfcdfc4" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>GetObject</name></member>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1acfa9dcf9fa747695cde276b9dd40ad90" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>LogGetObject</name></member>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a854d83b6b57d03a3dd976dafb3fefa23" prot="private" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>ObjectPointer</name></member>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a15c20a21988b030b7e2da4ccd6c0b243" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>ObjectType</name></member>
      <member refid="classCodeHelper_1_1Dependency_3_01TObject_01_4_1a3ac53cfc165d11f43d390ad2ff06a89c" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency&lt; TObject &gt;</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
