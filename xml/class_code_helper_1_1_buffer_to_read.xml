<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="zh">
  <compounddef id="class_code_helper_1_1_buffer_to_read" kind="class" language="C++" prot="public" final="yes">
    <compoundname>CodeHelper::BufferToRead</compoundname>
    <includes refid="_buffers_8hpp" local="no">Buffers.hpp</includes>
    <templateparamlist>
      <param>
        <type>std::default_initializable</type>
        <declname>TMessage</declname>
        <defname>TMessage</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_code_helper_1_1_buffer_to_read_1a324d38cdb001a9ca404706d215426f24" prot="public" static="no">
        <type>TMessage</type>
        <definition>using CodeHelper::BufferToRead&lt; TMessage &gt;::MessageType =  TMessage</definition>
        <argsstring></argsstring>
        <name>MessageType</name>
        <qualifiedname>CodeHelper::BufferToRead::MessageType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="19" column="1" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_code_helper_1_1_buffer_to_read_1a0f411507f4aba0bf89d63d5bfc2a4d54" prot="private" static="no" mutable="no">
        <type>std::array&lt; TMessage, 3 &gt;</type>
        <definition>std::array&lt;TMessage, 3&gt; CodeHelper::BufferToRead&lt; TMessage &gt;::Buffer</definition>
        <argsstring></argsstring>
        <name>Buffer</name>
        <qualifiedname>CodeHelper::BufferToRead::Buffer</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="22" column="12" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_code_helper_1_1_buffer_to_read_1a7465b3eef477b7a65f983d2d3ebe8f19" prot="private" static="no" nodiscard="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::span&lt; std::uint8_t &gt;</type>
        <definition>std::span&lt; std::uint8_t &gt; CodeHelper::BufferToRead&lt; TMessage &gt;::GetPingPongSpan</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetPingPongSpan</name>
        <qualifiedname>CodeHelper::BufferToRead::GetPingPongSpan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="24" column="12" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="24" bodyend="27"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_code_helper_1_1_buffer_to_read_1a37f4eb11a6347bbb3dad37087f2793b6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>TMessage &amp;</type>
        <definition>TMessage &amp; CodeHelper::BufferToRead&lt; TMessage &gt;::GetMessage</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetMessage</name>
        <qualifiedname>CodeHelper::BufferToRead::GetMessage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="32" column="10" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_code_helper_1_1_buffer_to_read_1a7a72bf72a779fff37683c502b9a9b03f" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::span&lt; std::uint8_t &gt;</type>
        <definition>std::span&lt; std::uint8_t &gt; CodeHelper::BufferToRead&lt; TMessage &gt;::GetMessageSpan</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetMessageSpan</name>
        <qualifiedname>CodeHelper::BufferToRead::GetMessageSpan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="37" column="12" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_code_helper_1_1_buffer_to_read_1ac39c1ffb8a22e2e77a265fc1850edc2a" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::span&lt; std::uint8_t &gt;</type>
        <definition>std::span&lt; std::uint8_t &gt; CodeHelper::BufferToRead&lt; TMessage &gt;::GetReaderSpan</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetReaderSpan</name>
        <qualifiedname>CodeHelper::BufferToRead::GetReaderSpan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="42" column="12" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_code_helper_1_1_buffer_to_read_1a5814fbdb2d055f418cfe6407e9b112d9" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_code_helper_1_1_ping_pong_exchanger" kindref="compound">PingPongExchanger</ref></type>
        <definition>PingPongExchanger CodeHelper::BufferToRead&lt; TMessage &gt;::GetExchanger</definition>
        <argsstring>(const std::uint8_t headByte=&apos;!&apos;) noexcept</argsstring>
        <name>GetExchanger</name>
        <qualifiedname>CodeHelper::BufferToRead::GetExchanger</qualifiedname>
        <param>
          <type>const std::uint8_t</type>
          <declname>headByte</declname>
          <defval>&apos;!&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="47" column="20" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>打包常用的读取器使用的缓冲区结构 <computeroutput>GetReaderSpan</computeroutput> 提供 <computeroutput>std::span</computeroutput> 用于 <computeroutput>TMessage</computeroutput> 消息在 reader 的 ReadBytes 函数的字节读取 <computeroutput>GetExchanger</computeroutput> 提供 <computeroutput><ref refid="class_code_helper_1_1_ping_pong_exchanger" kindref="compound">PingPongExchanger</ref></computeroutput> 用于检查读取到的消息的开头，保证必须是目标字节 <computeroutput>GetMessageSpan</computeroutput> 提供 <computeroutput>std::span</computeroutput> 是消息缓冲区存放物品的临时地点，用于检查后保存消息 <computeroutput>GetMessage</computeroutput> 提供 <computeroutput>TMessage&amp;</computeroutput> 用于检查完毕后从 MessageSpan 拿取消息 </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" line="16" column="1" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Buffers.hpp" bodystart="17" bodyend="51"/>
    <listofallmembers>
      <member refid="class_code_helper_1_1_buffer_to_read_1a0f411507f4aba0bf89d63d5bfc2a4d54" prot="private" virt="non-virtual"><scope>CodeHelper::BufferToRead</scope><name>Buffer</name></member>
      <member refid="class_code_helper_1_1_buffer_to_read_1a5814fbdb2d055f418cfe6407e9b112d9" prot="public" virt="non-virtual"><scope>CodeHelper::BufferToRead</scope><name>GetExchanger</name></member>
      <member refid="class_code_helper_1_1_buffer_to_read_1a37f4eb11a6347bbb3dad37087f2793b6" prot="public" virt="non-virtual"><scope>CodeHelper::BufferToRead</scope><name>GetMessage</name></member>
      <member refid="class_code_helper_1_1_buffer_to_read_1a7a72bf72a779fff37683c502b9a9b03f" prot="public" virt="non-virtual"><scope>CodeHelper::BufferToRead</scope><name>GetMessageSpan</name></member>
      <member refid="class_code_helper_1_1_buffer_to_read_1a7465b3eef477b7a65f983d2d3ebe8f19" prot="private" virt="non-virtual"><scope>CodeHelper::BufferToRead</scope><name>GetPingPongSpan</name></member>
      <member refid="class_code_helper_1_1_buffer_to_read_1ac39c1ffb8a22e2e77a265fc1850edc2a" prot="public" virt="non-virtual"><scope>CodeHelper::BufferToRead</scope><name>GetReaderSpan</name></member>
      <member refid="class_code_helper_1_1_buffer_to_read_1a324d38cdb001a9ca404706d215426f24" prot="public" virt="non-virtual"><scope>CodeHelper::BufferToRead</scope><name>MessageType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
