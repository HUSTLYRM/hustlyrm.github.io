<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="zh">
  <compounddef id="class_code_helper_1_1_dependency" kind="class" language="C++" prot="public">
    <compoundname>CodeHelper::Dependency</compoundname>
    <includes refid="_dependency_8hpp" local="no">Dependency.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename TObject</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_code_helper_1_1_dependency_1a15c20a21988b030b7e2da4ccd6c0b243" prot="public" static="no">
        <type>TObject</type>
        <definition>using CodeHelper::Dependency&lt; TObject &gt;::ObjectType =  TObject</definition>
        <argsstring></argsstring>
        <name>ObjectType</name>
        <qualifiedname>CodeHelper::Dependency::ObjectType</qualifiedname>
        <briefdescription>
<para>用于可能的类型萃取 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" line="17" column="1" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_code_helper_1_1_dependency_1a854d83b6b57d03a3dd976dafb3fefa23" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; TObject &gt;</type>
        <definition>std::shared_ptr&lt;TObject&gt; CodeHelper::Dependency&lt; TObject &gt;::ObjectPointer</definition>
        <argsstring></argsstring>
        <name>ObjectPointer</name>
        <qualifiedname>CodeHelper::Dependency::ObjectPointer</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" line="20" column="17" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_code_helper_1_1_dependency_1a086c2060c665213031e53a2ea46fbd0e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_code_helper_1_1_dependency" kindref="compound">Dependency</ref> &amp;</type>
        <definition>Dependency &amp; CodeHelper::Dependency&lt; TObject &gt;::operator=</definition>
        <argsstring>(const std::shared_ptr&lt; TObject &gt; &amp;objectPointer) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>CodeHelper::Dependency::operator=</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; TObject &gt; &amp;</type>
          <declname>objectPointer</declname>
        </param>
        <briefdescription>
<para>可以利用此赋值表达式简化依赖配置 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" line="24" column="12" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_code_helper_1_1_dependency_1a19aa4b65634aa6930c39e3615d6986a7" prot="public" static="no" nodiscard="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CodeHelper::Dependency&lt; TObject &gt;::Empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Empty</name>
        <qualifiedname>CodeHelper::Dependency::Empty</qualifiedname>
        <briefdescription>
<para>表明依赖是否为空（内部是否为空指针） </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" line="31" column="7" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_code_helper_1_1_dependency_1afd49d9dbcbe148fb8cabe4e6e7b25a61" prot="public" static="no" nodiscard="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>TObject &amp;</type>
        <definition>TObject &amp; CodeHelper::Dependency&lt; TObject &gt;::GetObject</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetObject</name>
        <qualifiedname>CodeHelper::Dependency::GetObject</qualifiedname>
        <briefdescription>
<para>直接获取成员，简化一些表达式 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>可能导致段错误，在使用前请确保依赖不为空 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" line="40" column="10" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_code_helper_1_1_dependency_1aec56522c5687aa9ca30d2968dd09781c" prot="public" static="no" nodiscard="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>TObject &amp;</type>
        <definition>TObject &amp; CodeHelper::Dependency&lt; TObject &gt;::LogGetObject</definition>
        <argsstring>(const std::string &amp;requester, std::string_view objectName) const noexcept</argsstring>
        <name>LogGetObject</name>
        <qualifiedname>CodeHelper::Dependency::LogGetObject</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>requester</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>objectName</declname>
        </param>
        <briefdescription>
<para>在获取成员前打印一行 debug 日志，用于段错误时快速 trace </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" line="46" column="10" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" bodystart="46" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>利用 std::shared_ptr 实现 c++ 依赖注入模式 </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>一般使用方法见 Service 的各种子类 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" line="13" column="1" bodyfile="C:/Users/Sango/source/LangYa/Sources/CodeHelper/Headers/LangYa/CodeHelper/Dependency.hpp" bodystart="14" bodyend="51"/>
    <listofallmembers>
      <member refid="class_code_helper_1_1_dependency_1a19aa4b65634aa6930c39e3615d6986a7" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency</scope><name>Empty</name></member>
      <member refid="class_code_helper_1_1_dependency_1afd49d9dbcbe148fb8cabe4e6e7b25a61" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency</scope><name>GetObject</name></member>
      <member refid="class_code_helper_1_1_dependency_1aec56522c5687aa9ca30d2968dd09781c" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency</scope><name>LogGetObject</name></member>
      <member refid="class_code_helper_1_1_dependency_1a854d83b6b57d03a3dd976dafb3fefa23" prot="private" virt="non-virtual"><scope>CodeHelper::Dependency</scope><name>ObjectPointer</name></member>
      <member refid="class_code_helper_1_1_dependency_1a15c20a21988b030b7e2da4ccd6c0b243" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency</scope><name>ObjectType</name></member>
      <member refid="class_code_helper_1_1_dependency_1a086c2060c665213031e53a2ea46fbd0e" prot="public" virt="non-virtual"><scope>CodeHelper::Dependency</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
